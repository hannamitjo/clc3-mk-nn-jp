name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'clc3v2-mk-nn-jp'
  GAR_LOCATION: 'us-central1'
  GKE_CLUSTER: 'streamlit-cluster'
  GKE_ZONE: 'europe-central2'
  DEPLOYMENT_NAME: 'clc-streamlit-deployment'
  REPOSITORY: 'clc'
  IMAGE: 'static-site'

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4' # actions/checkout@v4

      - name: Authenticate to Google Cloud
        env:
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
        run: |
          echo "$GCLOUD_SERVICE_KEY" > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project $(jq -r '.project_id' key.json)

      - name: Configure Docker Authentication
        run: |
          gcloud auth configure-docker ${GAR_LOCATION}.pkg.dev 
      
      # Build the Docker image
      - name: 'Build and push Docker container'
        run: |-
          DOCKER_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:${GITHUB_SHA}"

          docker build \
            --tag "${DOCKER_TAG}" \
            --build-arg GITHUB_SHA="${GITHUB_SHA}" \
            --build-arg GITHUB_REF="${GITHUB_REF}" \
            .

          docker push "${DOCKER_TAG}"

      # Set up kustomize
      - name: 'Set up Kustomize'
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.3/kustomize_v5.4.3_linux_amd64.tar.gz
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: 'Deploy to GKE'
        run: |-
          # replacing the image name in the k8s template
          ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
